generator client {
  provider = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  male
  female
}

model User {
  id      Int          @id @default(autoincrement())
  email   String       @unique
  name    String?
  posts   Post[]
  profile UserProfile?

  @@map("users")
}

model UserProfile {
  id     Int     @id @default(autoincrement())
  userId Int     @unique @map("user_id")
  gender Gender?
  bio    String?
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_profile")
}

model Post {
  id       Int    @id @default(autoincrement())
  title    String @default("untitled")
  content  String @default("no content")
  authorId Int?   @map("author_id")
  author   User?  @relation(fields: [authorId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  tags     Tag[]  @relation("PostToTag")

  @@map("posts")
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[] @relation("PostToTag")

  @@map("tags")
}

model UserLog {
  userId      Int      @map("user_id")
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz
  description String   @default("no description") @map("description")

  @@id([userId, createdAt])
  @@unique([userId, createdAt])
  @@map("user_logs")
}

view UserPostCount {
  userId    Int @map("user_id")
  postCount Int @map("post_count")

  @@map("user_post_count")
  @@unique([userId])
}
